#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

#define SIZE 32

int FillArray(int *arr, int size);
void BubbleSort(int *arr, int size);
int LinearSearch(int *arr, int n, int search);

int main()
{
	int lenght1, lenght2;
	int numbers[SIZE];
	int numbers2[SIZE];

	scanf("%d", &lenght1);
	scanf("%d", &lenght2);

	FillArray(numbers, lenght1);
	FillArray(numbers2, lenght2);

	for (size_t i = 0; i < lenght1; i++)
	{
		int temp = numbers[i];
		int exist = LinearSearch(numbers2, lenght2, temp);
	
		if (exist == 0)
		{
			numbers2[lenght2] = temp;
			lenght2++;
		}
	}

	BubbleSort(numbers2, lenght2);

	for (size_t i = 0; i < lenght2; i++)
	{
		printf("%d ", numbers2[i]);
	}

	printf("\n");
	system("pause");
	return 0;
}

int FillArray(int *arr, int size)
{
	for (size_t i = 0; i < size; i++)
	{
		printf("arr[%d] = ", i);
		scanf("%d", &arr[i]);
	}
}

int LinearSearch(int *arr, int n, int search)
{
	bool exist = false;

	for (size_t i = 0; i < n; i++)
	{
		if (arr[i] == search)
		{
			exist = true;
		}
	}

	if (exist == true)
	{
		return 1;
	}
	return 0;
}

void BubbleSort(int *arr, int size)
{
	if (!arr || size == 0)
		return;

	bool swap = true;
	while (swap)
	{
		swap = false;

		for (size_t i = 0; i < size - 1; i++)
		{
			if (arr[i] > arr[i + 1])
			{
				int temp = arr[i];
				arr[i] = arr[i + 1];
				arr[i + 1] = temp;
				swap = true;
			}
		}
	}
}
