#define _CRT_SECURE_NO_WARNINGS 
#define _GNU_SOURCE
#include <stdio.h>
#include <conio.h>
#include <stdlib.h>
#include <string.h>

int GetCommentsNumber(FILE* inputFile)
{
	int numberOfComments = 0;
	int multylineComment = 0;
	char line[256];
	char currentChar;

	while ((currentChar = fgetc(inputFile)) != EOF) //Chete dokato ne stingne krai na faila
	{
		int i = 0;
		while (currentChar != '\n' && currentChar != EOF)//Prochite 1 red
		{
			line[i++] = currentChar; //Zapisva v line
			currentChar = fgetc(inputFile);
		}

		line[i] = '\0';
		if (i != 0) //Ima procheten red
		{
			for (size_t j = 0; j < i - 1; j++)
			{
				if (line[j] == '/' && multylineComment == 0)
				{
					if (line[j + 1] == '/')
					{
						numberOfComments++;
					}
					else if (line[j + 1] == '*')
					{
						multylineComment = 1;
					}
				}
				else if (line[j] == '*' && line[j + 1] == '/')
				{
					multylineComment = 0;
					numberOfComments++;
				}
			}
		}
	}
	rewind(inputFile);
	return numberOfComments;
} 

int FindKeyword(char* word, char* text)
{
	size_t wordLen = strlen(word);
	size_t textLen = strlen(text);
	int flag = 0;

	for (size_t i = 0; i < textLen; i++)
	{
		flag = 0;
		if (text[i] == word[0])
		{
			for (size_t j = 1; j < wordLen; j++)
			{
				if (text[i + j] != word[j])
				{
					flag = 1;
					break;
				}
			}
			if (flag == 0)
			{
				return 1;
			}
		}
	}

	return 0;
}

int GetLoopsNumber(FILE* inputFile)
{
	int numberOfLoops = 0;
	char line[256];
	char currentChar;

	while ((currentChar = fgetc(inputFile)) != EOF)
	{
		int i = 0;
		while (currentChar != '\n' && currentChar != EOF)
		{
			line[i++] = currentChar;
			currentChar = fgetc(inputFile);
		}

		line[i] = '\0';
		if (i != 0)
		{
			numberOfLoops += FindKeyword("\tfor(", line);
			numberOfLoops += FindKeyword("\tfor (", line);

			numberOfLoops += FindKeyword("\twhile(", line);
			numberOfLoops += FindKeyword("\twhile (", line);

			numberOfLoops += FindKeyword("}while(", line);
			numberOfLoops += FindKeyword("}while (", line);

			numberOfLoops += FindKeyword(" while(", line);
			numberOfLoops += FindKeyword(" while (", line);
		}
	}
	rewind(inputFile);
	return numberOfLoops;
}

void FileToFile(FILE* inputFile, FILE* outputFile)
{
	char inputFileName[128];
	printf("Enter input file name: ");
	scanf("%s", &inputFileName);

	char outputFileName[128];
	printf("Enter output file name:");
	scanf("%s", &outputFileName);

	inputFile = fopen(inputFileName, "r");
	outputFile = fopen(outputFileName, "w");

	int comments = GetCommentsNumber(inputFile);
	int loops = GetLoopsNumber(inputFile);

	fprintf(outputFile, "Comment = %d\n", comments);
	fprintf(outputFile, "Loops = %d\n", loops);

}

void FileToScreen(FILE* inputFile)
{
	char fileName[128];
	printf("Enter file name: ");
	scanf("%s", &fileName);

	inputFile = fopen(fileName, "r");

	int comments = GetCommentsNumber(inputFile);
	printf("Commentss: %d\n", comments);

	int loops = GetLoopsNumber(inputFile);
	printf("Cikli: %d\n", loops);

}

void KeyboardToFile(FILE* inputFile)
{
	char lines[256];
	char fileName[128];
	scanf("%s", &fileName);
	
	inputFile = fopen(fileName, "w");

	while (1)
	{
		scanf("%s", &lines);
		if (strcmp(lines, "exit") == 0)
		{
			break;
		}
		fprintf(inputFile, "%s\n", &lines);
		fflush(inputFile);
	}

	int comments = GetCommentsNumber(inputFile);
	int loops = GetLoopsNumber(inputFile);

	fprintf(inputFile, "Comments = %d\n", comments);
	fprintf(inputFile, "Loops = %d\n", loops);

}

void KeyboardToScreen(FILE* inputfile)
{

}

void Menu()
{
	printf("1.Reading program from file and saving the result in new file.\n");
	printf("2.Reading program from file and output the result on the screen\n");
	printf("3.Reading program from console and saving the result in file\n");
	//printf("4.Reading program from console and output the result on the screen\n");
}

int main()
{
	FILE* inputFile = NULL;
	FILE* outputFile = NULL;
	//inputFile = fopen("Example.txt", "rt");

	int choice;
	Menu();
	scanf("%d", &choice);

	switch (choice)
	{
	case 1:FileToFile(inputFile, outputFile);
		break;
	case 2:FileToScreen(inputFile);
		break;
	case 3:KeyboardToFile(inputFile);
		break;
	case 4:
		break;
	default:printf("Invalid input");
		break;
	}

	printf("----------------");
	/*int comments = GetCommentsNumber(inputFile);
	printf("Komentari: %d\n", comments);*/

	//rewind(inputFile);

	/*int loops = GetLoopsNumber(inputFile);
	printf("Cikli: %d\n", loops);*/

	/*fclose(inputFile);
	fclose(outputFile);*/

	_getch();
	return 0;
}
